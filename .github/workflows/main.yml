name: Main Workflow

on:
  push:
    branches:
      - github-actions

env:
  cache-name: cache-badges

jobs:
  tests:
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run tests
        run: cargo test --all --no-fail-fast

      - name: Generate coverage
        run: |
          cargo +nightly tarpaulin --verbose --all-features --workspace --timeout 120 --out Html  | grep -Ei '^[[:digit:]]+\.[[:digit:]]+% coverage' | grep -oEi '^[[:digit:]]+\.[[:digit:]]+' | awk '{print "coverage_result="$1}' >> "$GITHUB_ENV"

      - name: Create badge artifacts
        run: |
          echo "Coverage ${{ env.coverage_result }}"
          mkdir -p ~/github-pages
          mv -f tarpaulin-report.html ~/github-pages/tarpaulin-report.html
          curl "https://img.shields.io/badge/coverage-${{ env.coverage_result }}%25-success" --silent --fail --output ~/github-pages/coverage-badge.svg

      - name: Cache badge artifacts
        uses: actions/cache/save@v3
        with:
          path: ~/github-pages
          key: ${{ env.cache-name }}-${{ github.sha }}

  pages:
    needs: tests

    permissions:
      contents: read
      pages: write
      id-token: write

    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
    concurrency:
      group: "pages"
      cancel-in-progress: false

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Restore cache badge artifacts
        uses: actions/cache@v3
        with:
          path: ~/github-pages
          key: ${{ env.cache-name }}-${{ github.sha }}

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: '~/github-pages'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
